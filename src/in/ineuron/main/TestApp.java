package in.ineuron.main;

import java.util.List;
import in.ineuron.controller.IProductController;
import in.ineuron.factory.ProductControllerFactory;
import in.ineuron.pojo.Product;

public class TestApp
{

	private static IProductController productController = null;

	public static void main(String[] args)
	{
		// for handling all user inputs
		UserInputHandler userInputHandler = UserInputHandler.getUserInputHandler();
		int autoGeneratedProductId = 0;

		while (true)
		{
			int userChoice = userInputHandler.getUserChoice();

			switch (userChoice)
			{
			case 1:

				// creating Pojo class object and setting data for insert
				Product productForAdd = userInputHandler.getAddProdutInput();

				// passing to controller
				productController = ProductControllerFactory.getProductController();

				autoGeneratedProductId = productController.addProduct(productForAdd);

				if (autoGeneratedProductId == 0)
				{
					System.out.println("\n\n==================================================\n\n");
					System.err.println("Oops....Something Went wrong............");
					System.err.println("Insert Operation failed");
					System.out.println("\n\n==================================================\n\n");
				} else
				{
					System.out.println("\n\n==================================================\n\n");
					System.out.println("product details inserted Successfully");
					System.out.println("please take a note of Product Id: " + autoGeneratedProductId);
					System.out.println("\n\n==================================================\n\n");
				}

				break;

			case 2:

				// existed Product object retrived from DB using id
				Product retrivedProduct = null;

				int productIdForViewing = 0;

				// accepting productId from user:
				productIdForViewing = userInputHandler.getProdIdInputToViewProduct();

				// passing to controller
				productController = ProductControllerFactory.getProductController();

				retrivedProduct = productController.viewProduct(productIdForViewing);

				if (retrivedProduct != null)
				{
					System.out.println("\n\n\n");
					System.out.println("records found: ");
					System.out.println(retrivedProduct);
					System.out.println("\n\n");
				} else
				{
					System.out.println("\n\n");
					System.err.println("No record Found with given product id");
					System.out.println("\n\n");
				}
				break;
			case 3:

				// existed Product object retrived from DB using id
				Product existingProduct = null;

				// new product Object for update
				Product newProduct = null;

				int productIdForUpdate = 0;

				// controller Object
				productController = ProductControllerFactory.getProductController();

				// accepting productId from user:
				productIdForUpdate = userInputHandler.getProductIdforUpdate();

				// passing to controller
				existingProduct = productController.viewProduct(productIdForUpdate);

				String updateStatus = null;
				if (existingProduct != null)
				{
					System.out.println("records found");

					newProduct = userInputHandler.getLatestProductDetailsForUpdate(existingProduct);

					// passsing the record to controller
					updateStatus = productController.updateProduct(newProduct);

				} else
				{
					System.out.println("Record not found...");
				}

				if (updateStatus.equalsIgnoreCase("success"))
					System.out.println("Product record Updated  Successfully");
				else
					System.out.println("Some thing went wrong .....Product record Updating failed");

				break;
			case 4:

				int productIdForDelete = userInputHandler.getProductIdforDelete();

				// controller Object
				productController = ProductControllerFactory.getProductController();

				// passing to controller to check product availble or not
				Product productToDelete = productController.viewProduct(productIdForDelete);

				String deleteStatus = null;

				if (productToDelete != null)
				{
					System.out.println("record avaible for deleteion");

					System.out.println(productToDelete);

					// passing to controller
					deleteStatus = productController.deleteProduct(productToDelete);

				} else
				{
					System.out.println("No record found for deletion");
				}

				if (deleteStatus.equalsIgnoreCase("success"))
				{
					System.out.println("\n\n Product deleted Successfully......... \n\n");
				} else
				{
					System.out.println("\n\nOops... Something went wrong");
					System.out.println("Product Deletion failed\n\n");
				}

				break;

			case 5:

				// passing request to controller
				productController = ProductControllerFactory.getProductController();

				List<Product> productList = productController.viewAllProdutsInfo();

				// to view all products
				System.out.println("pId\tpName\tprice\tquantity\tsupplier");
				System.out.println("------------------------------------------------");
				productList.forEach(product ->
				{
					System.out.println(
							product.getProductId() + "\t" + product.getProductName() + "\t" + product.getProductPrice()
									+ "\t" + product.getProductQuantity() + "\t" + product.getProductSupplier());
				});

				break;
			case 6:
				System.out.println("Thanks Fot using our Application......");
				System.out.println("Have a Nice Day!");
				System.exit(0);
				break;

			default:
				break;
			}
		}

	}
}
